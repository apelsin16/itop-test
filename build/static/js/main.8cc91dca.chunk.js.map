{"version":3,"sources":["components/button/Button.js","components/app/App.js","reportWebVitals.js","index.js","components/button/Button.module.css"],"names":["Button","text","handler","className","styles","button","onClick","debounce","f","ms","isCooldown","apply","this","arguments","setTimeout","App","state","isWorking","paused","start","timeInterval","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","pauseTimer","seconds","Math","trunc","floor","minutes","hours","onDoubleClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gOAWeA,EARA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACrB,OACI,wBAAQC,UAAWC,IAAOC,OAAQC,QAASJ,EAA3C,SACGD,K,MCFT,SAASM,EAASC,EAAGC,GAEnB,IAAIC,GAAa,EAEjB,OAAO,WACDA,IAEJF,EAAEG,MAAMC,KAAMC,WAEdH,GAAa,EAEbI,YAAW,kBAAMJ,GAAa,IAAOD,K,IAMpBM,E,4MAEnBC,MAAQ,CACNC,WAAW,EACXC,QAAQ,EACRC,MAAO,EACPC,aAAc,G,EAIhBC,WAAa,WACX,EAAKC,SAAS,CACZH,MAAOI,KAAKC,MAAQ,EAAKR,MAAMI,aAC/BH,WAAW,EACXG,aAAc,EAAKJ,MAAMI,eAE3B,EAAKK,MAAQC,aAAY,WAErB,EAAKJ,SAAS,CACZF,aAAc,IAAIG,KAAS,EAAKP,MAAMG,UAGzC,M,EAGLQ,UAAY,WACV,EAAKL,SAAS,CAACL,WAAW,IAC1BW,cAAc,EAAKH,OACnB,EAAKI,c,EAGPC,WAAa,WACT,EAAKR,SAAS,CAACL,WAAW,IAC1BW,cAAc,EAAKH,Q,EAGvBI,WAAa,WACX,EAAKP,SAAS,CACZH,MAAO,EACPF,WAAW,EACXG,aAAc,K,uDAIR,IAAD,EAC0CR,KAAKI,MAA/CC,EADA,EACAA,UAAWC,EADX,EACWA,OAAeE,GAD1B,EACmBD,MADnB,EAC0BC,cAC3BW,EAAUC,KAAKC,MAAsC,GAAhCD,KAAKE,MAAMd,EAAe,MAAU,GACzDe,EAAUH,KAAKE,MAAMH,EAAU,IAC/BK,EAAQJ,KAAKE,MAAMC,EAAU,IAGnC,OACI,sBAAKhC,UAAU,MAAf,UACE,uCACE,uBAAMA,UAAU,OAAhB,UACGiC,EAAQ,GAAK,IAAMA,EAAQA,EAD9B,KAEGD,EAAU,GAAK,IAAMA,EAAUA,EAFlC,KAGGJ,EAAU,GAAK,IAAMA,EAAUA,SAGlCb,GAAUD,EACP,cAAC,EAAD,CAAQhB,KAAK,OAAOC,QAASU,KAAKe,YAClC,cAAC,EAAD,CAAQ1B,KAAK,QAAQC,QAASU,KAAKS,aAExC,wBAAQgB,cAAe9B,EAASK,KAAKkB,WAAY,KAAjD,kBACA,cAAC,EAAD,CAAQ7B,KAAK,QAAQC,QAASU,KAAKiB,oB,GAjEZS,aCTlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.8cc91dca.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Button.module.css'\r\n\r\nconst Button = ({text, handler}) => {\r\n  return (\r\n      <button className={styles.button} onClick={handler}>\r\n        {text}\r\n      </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\nimport Button from \"../button\";\nimport './App.css';\n\nfunction debounce(f, ms) {\n\n  let isCooldown = false;\n\n  return function() {\n    if (isCooldown) return;\n\n    f.apply(this, arguments);\n\n    isCooldown = true;\n\n    setTimeout(() => isCooldown = false, ms);\n  };\n\n}\n\n\nexport default class App extends Component {\n\n  state = {\n    isWorking: false,\n    paused: false,\n    start: 0,\n    timeInterval: 0\n  };\n\n\n  startTimer = () => {\n    this.setState({\n      start: Date.now() - this.state.timeInterval,\n      isWorking: true,\n      timeInterval: this.state.timeInterval\n    });\n    this.timer = setInterval(() => {\n\n        this.setState({\n          timeInterval: new Date() - this.state.start,\n        });\n\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    this.setState({isWorking: false});\n    clearInterval(this.timer);\n    this.resetTimer();\n  };\n\n  pauseTimer = () => {\n      this.setState({isWorking: false});\n      clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState({\n      start: 0,\n      isWorking: false,\n      timeInterval: 0\n    })\n  };\n\n  render() {\n    const {isWorking, paused, start, timeInterval} = this.state;\n    const seconds = Math.trunc(Math.floor(timeInterval / 1000)*10)/10;\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n\n    return (\n        <div className=\"App\">\n          <h1>Timer\n            <span className='span'>\n              {hours < 10 ? \"0\" + hours : hours} :\n              {minutes < 10 ? \"0\" + minutes : minutes} :\n              {seconds < 10 ? \"0\" + seconds : seconds}\n            </span>\n          </h1>\n          {!paused && isWorking ?\n              (<Button text='Stop' handler={this.stopTimer}/>) :\n              (<Button text='Start' handler={this.startTimer}/>)\n          }\n          <button onDoubleClick={debounce(this.pauseTimer, 300)}>Wait</button>\n          <Button text='Reset' handler={this.resetTimer}/>\n        </div>\n    );\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3eBbr\"};"],"sourceRoot":""}